<dalvik.system.DexClassLoader: java.lang.Class loadClass(java.lang.String;)>
<dalvik.system.PathClassLoader: java.lang.Class loadClass(java.lang.String;)>
<java.lang.Runtime: java.lang.Process exec(java.lang.String)>
<java.lang.Runtime: java.lang.Runtime getRuntime()>
<java.lang.Runtime: void loadLibrary(java.lang.String)>
<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>
<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<android.webkit.WebView: void loadUrl(java.lang.String)>
<java.net.ServerSocket: void bind(java.net.SocketAddress)>
<java.net.URL: java.io.InputStream openStream()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<android.speech.SpeechRecognizer: void startListening(android.content.Intent)>
<android.app.ActivityManager: void killBackgroundProcesses(java.lang.String)>
<android.provider.CallLog$Calls: java.lang.String getLastOutgoingCall(android.content.Context)>
<android.provider.ContactsContract$Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
<android.os.PowerManager$WakeLock: void acquire(long)>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)>
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)>
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.app.PendingIntent)>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>
<android.hardware.Camera: android.hardware.Camera open()>
<java.net.URL: java.net.URLConnection openConnection()>
<java.net.URL: java.io.InputStream openStream()>
<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>
<java.util.Base64.Decoder: byte[] decode(byte[])>


